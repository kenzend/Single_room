<!--
  Author:    Thang Nguyen
  Date:      11/12/2020
  Course:    CS 4540, University of Utah, School of Computing
  Copyright: CS 4540 and Thang Nguyen - This work may not be copied for use in Academic Coursework.
  I, Thang Nguyen, certify that I wrote this code from scratch and did not copy it in part or whole from
  another source.  Any references used in the completion of the assignment are cited in my README file.
  File Contents
     Room page
-->

@using Microsoft.AspNetCore.Identity
@using Playlist_1.Areas.Identity.Data

@inject SignInManager<Playlist_1User> SignInManager
@inject UserManager<Playlist_1User> UserManager


@model Playlist_1.Models.Room
@using System.Web

@{
    ViewData["Title"] = "Room";
}
<div class="site_text_color" style="text-align: center">
    <h1>Room</h1>
</div>

@Html.AntiForgeryToken()
@{
    Playlist_1.Models.Media[] array = Model.Playlist.ToArray();
    Playlist_1.Models.User[] userArray = Model.Users.Values.ToArray();
}

<div class="container playlist_box site_text_color">
    <div class="row">&nbsp;</div>
    <div class="row">
        <div class="col-6">
            <button class="Button_Blue" id="play_from_beginning">Play playlist</button>
            <button class="Button_Blue" id="play">Play</button>
            <button class="Button_Green" id="pause">Pause</button>
            <button class="Button_Orange" id="next">Next track</button>
            <br />
            Playing track: <span id="currentlyPlayingIndex">none</span>
        </div>
        <div class="col-6">
            Upload file(s): <input type="file" accept=".mp3,audio/*" id="fileInput" multiple />
            <br />
            Or Youtube link: <input type="text" id="linkInput" />
        </div>
        <div class="col-6" style="left: 50%; margin-top: 3px">
            <input type="button" class="Big_Button_Blue" id="postButton" value="Post Media" />
        </div>
    </div>
    <div class="row">
        <div class="col-12">
            <hr />
        </div>
    </div>
    <div class="row">
        <div class="col-1">&nbsp;</div>
        <div class="col-12">
            <table class="site_table_color" id="mediaList">
                <thead>
                    <tr class="site_text_color_2 site_table_color"> <th>Track no.</th><th>Posted</th><th>Owner</th><th>Title</th><th>Media</th><th>Controls</th> </tr>
                </thead>
                <tbody class="site_text_color_2 song_color">
                    @for (int i = 0; i < array.Length; i++)
                    {
                        var media = array[i];
                        if (media == null)
                            continue;
                    <tr id="@i" onclick="play('@i');">
                        <td style="text-align: center;">@i</td>
                        <td>@media.DatePosted.ToString("MM/dd/yyyy HH:mm")</td>
                        <td>@media.Owner </td>
                        <td>@media.Title</td>
                        @if(media.Link.Contains("mp3"))
                            {
                        <td>
                            <audio id="media_@i" onended="playNext('@i');" allow="autoplay" class="uninteractable" controls>
                                <source src="~/room/@media.Link" />
                            </audio>
                        </td>
                            }
                            else
                            {
                        <td>
                            <video width="300" height="80" id="media_@i" onended="playNext('@i');" allow="autoplay" class="uninteractable">
                                <source src="~/room/@media.Link" />
                            </video>
                        </td>
                            }
                        <td>
                            <button class="Button_Red" id="remove_@i" onclick="remove('@i'); event.stopPropagation();">Remove</button>
                        </td>
                    </tr>
                    }
                </tbody>

            </table>
        </div>
    </div>
    <div class="row">
        <div class="col-12">
            <hr />
        </div>
    </div>
    <div class="row">
        <div class="col-1">&nbsp;</div>
        <div class="col-9">
            <table class="site_table_color" id="userList">
                <thead>
                    <tr class="site_text_color_2 site_table_color"> <th>Name</th><th>Joined</th><th>Role</th><th>Action</th><th>Status</th> </tr>
                </thead>
                <tbody class="site_text_color_2 site_table_color">
                    @for (int i = 0; i < userArray.Length; i++)
                    {
                        var user = userArray[i];
                        if (user.Status == "online")
                        {
                    <tr id="@user.Name" class="online">
                        <td>@user.Name</td>
                        <td>@user.Joined.ToString("MM/dd/yyyy HH:mm")</td>
                        <td>@user.Role</td>
                        <td>
                            <button class="Button_Blue" id="promote_@user.Name" onclick="promote('@user.Name');">Promote</button>
                            <button class="Button_Red" id="block_@user.Name" onclick="block('@user.Name');">Block</button>
                            <button class="Button_Orange" id="remove_media_of_@user.Name" onclick="remove_media_of('@user.Name');">Remove Media(s)</button>
                            <button class="Button_Red" id="demote_@user.Name" onclick="demote('@user.Name');">Demote</button>
                        </td>
                        <td>@user.Status</td>
                    </tr>
                        }
                    }
                    @for (int i = 0; i < userArray.Length; i++)
                    {
                        var user = userArray[i];
                        if (user.Status == "offline")
                        {
                    <tr id="@user.Name" class="offline">
                        <td>@user.Name</td>
                        <td>@user.Joined.ToString("MM/dd/yyyy HH:mm")</td>
                        <td>@user.Role</td>
                        <td>
                            <button id="promote_@user.Name" onclick="promote('@user.Name');">Promote</button>
                            <button id="block_@user.Name" onclick="block('@user.Name');">Block</button>
                            <button id="remove_media_of_@user.Name" onclick="remove_media_of('@user.Name');">Remove Media(s)</button>
                            <button id="demote_@user.Name" onclick="demote('@user.Name');">Demote</button>
                        </td>
                        <td>@user.Status</td>
                    </tr>
                        }
                    }
                    @for (int i = 0; i < userArray.Length; i++)
                    {
                        var user = userArray[i];
                        if (user.Status == "blocked")
                        {
                    <tr id="@user.Name" class="blocked">
                        <td>@user.Name</td>
                        <td>@user.Joined.ToString("MM/dd/yyyy HH:mm")</td>
                        <td>@user.Role</td>
                        <td>
                            <button id="unblock_@user.Name" onclick="unblock('@user.Name');">Unblock</button>
                            <button id="remove_media_of_@user.Name" onclick="remove_media_of('@user.Name');">Remove Media(s)</button>
                        </td>
                        <td>@user.Status</td>
                    </tr>
                        }
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>
@section Scripts
{
    <style>
        .lookClickable {
            cursor: pointer;
        }

        .uninteractable {
            pointer-events: none;
        }

        #mediaList {
            background: #eeeeee;
            border: 1px solid black;
            width: 100%;
        }

            #mediaList tr {
                border: 1px solid black;
                cursor: pointer;
            }

        #userList {
            background: #eeeeee;
            border: 1px solid black;
            width: 100%;
        }

            #userList tr {
                border: 1px solid black;
            }

        .blocked {
            background: #a02f2f;
        }

        .online {
            background: #53b15e;
        }

        .offline {
            background: #eeeeee;
        }

        .highlight {
            background: #00ff00;
        }
    </style>
    <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
    <link rel="stylesheet" href="//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">

    <script src="~/js/signalr/dist/browser/signalr.js"></script>
    <script>
        // this "Hack" allows the proper IDs (numbers) to be set for newly created elements on JS/client side
        var count = @Model.Playlist.Count();
        document.getElementById("postButton").click();
        var user = $("#manage").html();
        if (!user)
            user = "anon" + @Model.AnonIndex.ToString();
        else
            user = user.substring(6, user.length - 1);
    </script>
    <script src="~/js/playlist.js"></script>
}
